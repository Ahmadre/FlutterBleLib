// Copyright 2017, Paul DeMarco.
// All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

syntax = "proto3";

option java_package = "com.polidea.flutterblelib";
option java_outer_classname = "BleData";
option objc_class_prefix = "BleData";

message ScanSettingsMessage {
    int32 scanMode = 1;
    int32 callbackType = 2;
    //TODO for this moment they are hidden in
    //    uint64 reportDelayMillis = 3;
    //    int32 matchMode = 4;
    //    int32 numOfMatchesPerFilter = 5;
}

message ScanFilterMessage {
    string deviceName = 1;
    string deviceAddress = 2;
    string serviceUuid = 3;
    string serviceUuidMask = 4;
    string serviceDataUuid = 5;
    bytes serviceData = 6;
    bytes serviceDataMask = 7;
    int32 manufacturerId = 8;
    bytes manufacturerData = 9;
    bytes manufacturerDataMask = 10;
}

message BleDeviceMessage {
    string macAddress = 1;
    string name = 2;
    int32 rssi = 3;
    int32 mtu = 4;
}

message ScanResultMessage {
    BleDeviceMessage bleDeviceMessage = 1;
    int32 rssi = 2;
    uint64 timestampNanos = 3;
    int32 scanCallbackTypeMessage = 4;
}


message ConnectToDeviceDataMessage {
    string macAddress = 1;
    bool isAutoConnect = 2;
    int32 requestMtu = 3;
}

message SimpleTransactionMessage {
    string transactionId = 1;
}

message  RequestMtuTransactionMessage {
    string transactionId = 1;
    string macAddress = 2;
    int32 mtu = 3;
}

message  ReadRSSIForDeviceMessage {
    string transactionId = 1;
    string macAddress = 2;
}

enum LogLevelMessage {
    VERBOSE = 0;
    DEBUG = 1;
    INFO = 2;
    WARNING = 3;
    ERROR = 4;
    NONE = 5;
}

enum BluetoothStateMessage {
    UNKNOWN = 0;
    RESETTING = 1;
    UNSUPPORTED = 2;
    UNAUTHORIZED = 3;
    POWERED_OFF = 4;
    POWERED_ON = 5;
}